CREATE TABLE IF NOT EXISTS PUBLIC.PATIENTS
(UNIQUE_ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,
 NAME VARCHAR(25),
 SURNAME VARCHAR(25),
 MIDDLE_NAME VARCHAR(25),
 PHONE VARCHAR(25),
  PRIMARY KEY (UNIQUE_ID));


CREATE TABLE IF NOT EXISTS PUBLIC.DOCTORS
(UNIQUE_ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,
 NAME VARCHAR(25),
 SURNAME VARCHAR(25),
 MIDDLE_NAME VARCHAR(25),
 SPECIALIZATION VARCHAR(25),
 PRIMARY KEY (UNIQUE_ID));


CREATE TABLE IF NOT EXISTS PUBLIC.RECIPES
(UNIQUE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,
 DESCRIPTION VARCHAR(255) NOT NULL,
 PATIENT BIGINT NOT NULL,
 DOCTOR BIGINT NOT NULL,
 CREATED_TIMESTAMP TIMESTAMP NOT NULL,
 VALIDITY TIMESTAMP NOT NULL,
 PRIORITY BIGINT NOT NULL,
 PRIMARY KEY (UNIQUE_ID));

alter table RECIPES add constraint fk foreign key (patient) references patients(unique_id) ON UPDATE RESTRICT ON DELETE RESTRICT;

alter table RECIPES add constraint fk2 foreign key (doctor) references doctors(unique_id) ON UPDATE RESTRICT ON DELETE RESTRICT;

alter table RECIPES add constraint fk3 foreign key (priority) references priorities(unique_id) ON UPDATE RESTRICT ON DELETE RESTRICT;


CREATE TABLE IF NOT EXISTS PUBLIC.PRIORITIES
(UNIQUE_ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,
 NAME VARCHAR(50) NOT NULL,
 PRIMARY KEY (UNIQUE_ID));

CREATE VIEW IF NOT EXISTS PUBLIC.DOCTORSSTATISTIC AS select doctors.unique_id,
                                        doctors.surname,
                                        count(doctor) as value
                                       from recipes
                                        LEFT JOIN doctors ON recipes.doctor = doctors.unique_id
                                       group by doctors.unique_id